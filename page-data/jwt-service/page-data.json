{"componentChunkName":"component---src-templates-blog-post-js","path":"/jwt-service/","result":{"data":{"site":{"siteMetadata":{"title":"Journal"}},"markdownRemark":{"id":"fd610c40-8114-5fdf-a42b-667b5661d792","html":"<p>Hey I’m back with a second post today, and an exciting one. I actually made\nsomething that I listed in the last post. I made a\n<a href=\"https://github.com/mees-/jwt-service\">JWT service</a>. It’s really simple and\ndoesn’t control adding users to the list, which means that everyone can add\nusers which is probably not the best. It’s fairly easy to add some more\nauthorisation though, which is what I’ll do if I need to use this for an actual\nproject.</p>\n<p>I’ve used a couple of libraries to create it and they’ve made it very easy to\nbuild the app. I used <a href=\"https://expressjs.com/\">express</a> as the server framework.\nFor JWT I used the\n<a href=\"https://github.com/auth0/node-jsonwebtoken#readme\">jsonwebtoken</a> library, which\nis also very simple. To store users I used\n<a href=\"https://github.com/lukechilds/keyv\">keyv</a>. It’s a very simple key/value store\nthat has usernames as keys and hashes as values. I don’t need to store the JWTs\nanywhere because they can be verified with just the secret. Keyv has a couple of\nadaptors that make it easy to connect it to a persistent database, personally I\nuse postgres. Lastly I needed bcrypt to hash the stored passwords. With these\nthree libraries the whole service (without user creation auth) is only a single\nfile of 81 sloc (single lines of code). It only has four methods: <code>/token\n</code>, <code>/validate</code>, <code>GET</code> on <code>/user</code> and\n<code>POST</code> on <code>/user</code>. For specific information on how it\nworks and to try it out check\n<a href=\"https://github.com/mees-/jwt-service\">the Github repo</a>.</p>\n<p>Create an issue if you think something should be better, I’ll probably extend it\na little bit more with extra data on users and authorization on creating users\nbut for now it works.</p>","frontmatter":{"title":"JWT service","location":"Home, Groningen","date":"Tuesday, May 5th 2020","time":"20:05 PM"},"excerpt":"Hey I’m back with a second post today, and an exciting one. I actually made\nsomething that I listed in the last post. I made a\nJWT service…"}},"pageContext":{"slug":"/jwt-service/","previous":{"fields":{"slug":"/users-app/"},"frontmatter":{"title":"Users app"}},"next":{"fields":{"slug":"/state-of-the-cards-tech-choices/"},"frontmatter":{"title":"stateofthe.cards technical choices"}}}}}