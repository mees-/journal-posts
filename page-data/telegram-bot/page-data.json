{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/telegram-bot/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Journal"}},"markdownRemark":{"id":"7bf2f89c-d93a-532f-a170-caa08eb647da","html":"<h1>Telegram bot</h1>\n<p>Recently I wrote about hobby coding and how I never really writer any code for\nfun anymore.<br>\nRecently that has changed! Since April I’ve been working on a telegram bot for\nmy student society. It has fun functions like seeing how many days it will be\nuntil your birthday or announcing the people who have birthdays on a day. It\nalso can track some stats, like when you throw up or take a shit, because that’s\nwhat students like to track :P.</p>\n<p>Other than the fun features it also has useful features. For example: a member\ncan send a message to the bot that they want to have announced to the whole\nsociety (there is an announcement channel). The bot then forwards that message\nto the board of the society who can then approve, or deny the message. They can\nalso choose to schedule the message for a later time.</p>\n<h2>Technical</h2>\n<p>The bot is built upon <a href=\"https://github.com/telegraf/telegraf\">Telegraf.js</a>.\nTelegraf is a telegram bot framework for Typescript and Node.js. While it\narguably has poor documentation, it has fairly clear code and ways to use it.\nOverall I enjoyed using it, although I might say it’s lacking in some advanced\nfeatures such as context aware handlers. For example, for using the announcement\nfeature that my bot has, a user needs to run the command without arguments, then\nthe bot will reply saying something along the lines of: “Send your announcement\nnow”. Then the user sends another message with their announcement. The bot needs\nto know when someone sends an announcement message based on the context of the\nchat. Telegraf has some hints of a feature for this, but I never found out how\nto use it due to a lack of documentation. I ended up using a third party\nextension of the framework specifically for this feature.</p>\n<p>Apart from Telegraf, the bot uses Postgres with\n<a href=\"https://mikro-orm.io/\">Mikro-orm</a>. Mikro-orm is a lovely ORM for node with good\ntypescript support (using <a href=\"https://github.com/dsherret/ts-morph\">ts-morph</a>). I\nreally like the ORM because it does all the simple things an ORM needs to do and\nprovides a nice escape hatch for when you need to use more advanced SQL. They\neven provide ways to automatically cast the results back to a known entity type\nat the end of the “advanced SQL”. Furthermore their documentation is very good\nif you are just using the basics, though I think the documentation for more\nadvanced features could be better.</p>\n<h2>Bot structure</h2>\n<p>The bot is structured in a way where all the commands it has are basically\nplugins. They are all defined in separate functions and take the bot object as\nan argument. With that bot object they can do basically anything, like\nregistering commands and listening for events.<br>\nThe bot also has a task system, that I’m currently overhauling. The task system\nwas initially written for the scheduled announcement feature, but with the\noverhaul I also want to add periodic tasks like the birthday announcement. I\nwant to make task more generic, so they can be used in many more situations. For\nthis I’m also using Mikro-orm’s inheritance with table-per-hierarchy feature.<br>\nI first came across this concept at my work, working with EFCore. I really liked\nit because it works really well with OOP.</p>\n<p>Overall I think people are generally happy with the bot and I want to keep\nworking on it in my spare time, adding new features. After I complete the task\noverhaul I think I want to add a feature where people can sign up for the weekly\ndinner through the bot :).</p>\n<p>Cya</p>\n<p>Mees</p>","frontmatter":{"title":"Telegram bot","location":"Campus, Groningen","date":"Tuesday, September 13th 2022","time":"12:09 PM"},"excerpt":"Telegram bot Recently I wrote about hobby coding and how I never really writer any code for\nfun anymore. Recently that has changed! Since…"}},"pageContext":{"slug":"/telegram-bot/","previous":{"fields":{"slug":"/Registers-MMIO-MMUs-HART/"},"frontmatter":{"title":"Registers, MMIO, MMUs and a HART"}},"next":null}},
    "staticQueryHashes": ["2667034088","3000541721","671806358"]}